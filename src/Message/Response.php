<?php

namespace Omnipay\Payrix\Message;

use Omnipay\Common\Message\AbstractResponse;

/**
 * Response
 */
class Response extends AbstractResponse
{
    /**
     * The status of the Transaction is pending.
     *
     * @var int
     */
    const PENDING_STATUS = 0;

    /**
     * The status of the Transaction is approved.
     *
     * @var int
     */
    const APPROVED_STATUS = 1;

    /**
     * The status of the Transaction is failed.
     *
     * @var int
     */
    const FAILED_STATUS = 2;

    /**
     * The status of the Transaction is capture.
     *
     * @var int
     */
    const CAPTURED_STATUS = 3;

    /**
     * The status of the Transaction is settled.
     *
     * @var int
     */
    const SETTLED_STATUS = 4;

    /**
     * The status of the Transaction is returned.
     *
     * @var int
     */
    const RETURNED_STATUS = 5;

    /**
     * Is the response successful?
     *
     * @return boolean
     */
    public function isSuccessful()
    {
        if (isset($this->data['response']['data'][0]['status'])) {
            return $this->data['response']['data'][0]['status'] !== static::FAILED_STATUS;
        }

        return false;
    }

    /**
     * Is the response pending?
     *
     * @return boolean
     */
    public function isPending()
    {
        if (isset($this->data['response']['data'][0]['status'])) {
            return $this->data['response']['data'][0]['status'] == static::PENDING_STATUS;
        }

        return false;
    }

    /**
     * Response Message
     *
     * @return null|string A response message from the payment gateway
     */
    public function getMessage()
    {
        if (isset($this->data['errors'][0]['msg'])) {
            return $this->data['errors'][0]['msg'];
        }

        if (isset($this->data['response']['errors'][0]['msg'])) {
            return $this->data['response']['errors'][0]['msg'];
        }

        if (isset($this->data['message'])) {
            return $this->data['message'];
        }

        return null;
    }

    /**
     * Response code
     *
     * @return null|string A response code from the payment gateway
     */
    public function getCode()
    {
        if (isset($this->data['errors'][0]['code'])) {
            return $this->data['errors'][0]['code'];
        }

        if (isset($this->data['response']['errors'][0]['code'])) {
            return $this->data['response']['errors'][0]['code'];
        }

        if (isset($this->data['status'])) {
            return $this->data['status'];
        }

        return null;
    }

    /**
     * Gateway Reference
     *
     * @return null|string A reference provided by the gateway to represent this transaction
     */
    public function getTransactionReference()
    {
        if (isset($this->data['response']['data'][0]['id'])) {
            return $this->data['response']['data'][0]['id'];
        }
        
        return null;
    }

    /**
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        if (isset($this->data['response']['data'][0]['order'])) {
            return $this->data['response']['data'][0]['order'];
        }
        
        return '';
    }
}
